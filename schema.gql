# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Role {
  id: String!
  name: String!
  slug: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  id: String!
  name: String!
  email: String!
  username: String!
  role: Role!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

type Meta {
  currentPage: Float!
  totalPage: Float!
  totalData: Float!
  totalAllData: Float!
}

type FindAllUserObject {
  data: [User!]
  meta: Meta!
}

type AccessToken {
  token: String!
  expiresIn: Float!
  grantType: String!
}

type RefreshToken {
  token: String!
  expiresIn: Float!
}

type LoginObject {
  accessToken: AccessToken!
  refreshToken: RefreshToken!
}

type FindAllRoleObject {
  data: [Role!]
  meta: Meta!
}

type Query {
  root: String!
  users(findAllUserInput: FindAllUserInput): FindAllUserObject!
  user(id: String!): User!
  roles(findAllRoleInput: FindAllRoleInput): FindAllRoleObject!
  role(id: String!): Role!
}

input FindAllUserInput {
  page: Int = 1
  limit: Int = 10
  search: String
  orderBy: String = "createdAt"
  orderDir: String = "desc"
  roleId: String
}

input FindAllRoleInput {
  page: Int = 1
  limit: Int = 10
  search: String
  orderBy: String = "createdAt"
  orderDir: String = "desc"
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  deleteUser(id: String!): String!
  login(loginInput: LoginInput!): LoginObject!
  register(registerInput: RegisterInput!): User!
  createRole(createRoleInput: CreateRoleInput!): Role!
  updateRole(updateRoleInput: UpdateRoleInput!): Role!
  deleteRole(id: String!): String!
}

input CreateUserInput {
  name: String!
  username: String!
  email: String!
  password: String!
}

input UpdateUserInput {
  name: String
  username: String
  email: String
  password: String
  id: String!
}

input LoginInput {
  username: String!
  password: String!
}

input RegisterInput {
  name: String!
  username: String!
  email: String!
  password: String!
  confirmPassword: String!
}

input CreateRoleInput {
  name: String!
}

input UpdateRoleInput {
  name: String
  id: String!
}